// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pinnedRepository/pinnedRepository.proto

package pinnedRepository

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	go_mongodb_org_mongo_driver_bson_primitive "go.mongodb.org/mongo-driver/bson/primitive"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PinnedRepository struct {
	Id go_mongodb_org_mongo_driver_bson_primitive.ObjectID `protobuf:"bytes,1,opt,name=id,proto3,customtype=go.mongodb.org/mongo-driver/bson/primitive.ObjectID" json:"id" bson:"_id"`
	//  string Id = 1;
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	//  bool isCurrent = 4;
	TagIds               []string `protobuf:"bytes,5,rep,name=tagIds,proto3" json:"tagIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PinnedRepository) Reset()         { *m = PinnedRepository{} }
func (m *PinnedRepository) String() string { return proto.CompactTextString(m) }
func (*PinnedRepository) ProtoMessage()    {}
func (*PinnedRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7b74d9f056eadc9, []int{0}
}
func (m *PinnedRepository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PinnedRepository.Unmarshal(m, b)
}
func (m *PinnedRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PinnedRepository.Marshal(b, m, deterministic)
}
func (m *PinnedRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PinnedRepository.Merge(m, src)
}
func (m *PinnedRepository) XXX_Size() int {
	return xxx_messageInfo_PinnedRepository.Size(m)
}
func (m *PinnedRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_PinnedRepository.DiscardUnknown(m)
}

var xxx_messageInfo_PinnedRepository proto.InternalMessageInfo

func (m *PinnedRepository) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PinnedRepository) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PinnedRepository) GetTagIds() []string {
	if m != nil {
		return m.TagIds
	}
	return nil
}

func init() {
	proto.RegisterType((*PinnedRepository)(nil), "pinnedRepository.pinnedRepository")
}

func init() {
	proto.RegisterFile("pinnedRepository/pinnedRepository.proto", fileDescriptor_d7b74d9f056eadc9)
}

var fileDescriptor_d7b74d9f056eadc9 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xbf, 0x4a, 0x03, 0x41,
	0x10, 0xc6, 0xf3, 0x47, 0x03, 0x59, 0x9b, 0xb0, 0x88, 0x1c, 0x36, 0x09, 0xd7, 0x98, 0x26, 0xbb,
	0x60, 0x3a, 0xcb, 0x20, 0xc8, 0x61, 0x11, 0xb9, 0x4e, 0x1b, 0xd9, 0xbb, 0x1d, 0x36, 0x63, 0xbc,
	0x9d, 0x65, 0x77, 0x13, 0xc8, 0xb3, 0xf9, 0x02, 0x3e, 0x83, 0x45, 0x1e, 0xc2, 0x27, 0x90, 0xbb,
	0x58, 0xc8, 0x5d, 0x63, 0xf7, 0xcd, 0xf7, 0xfd, 0x18, 0x86, 0x6f, 0xd8, 0x8d, 0x43, 0x6b, 0x41,
	0xe7, 0xe0, 0x28, 0x60, 0x24, 0x7f, 0x90, 0x6d, 0x43, 0x38, 0x4f, 0x91, 0xf8, 0xa4, 0xed, 0x5f,
	0x5f, 0x1a, 0x32, 0xd4, 0x84, 0xb2, 0x56, 0x27, 0x2e, 0xfd, 0xe8, 0xb3, 0x0e, 0xca, 0x9f, 0xd9,
	0x00, 0x75, 0xd2, 0x9f, 0xf5, 0xe7, 0xe3, 0x55, 0xf6, 0x79, 0x9c, 0xf6, 0xbe, 0x8e, 0xd3, 0xa5,
	0x21, 0x51, 0x91, 0x35, 0xa4, 0x0b, 0x41, 0xde, 0xc8, 0x46, 0x2f, 0xb4, 0xc7, 0x3d, 0x78, 0x59,
	0x04, 0xb2, 0xd2, 0x79, 0xac, 0x30, 0xe2, 0x1e, 0xc4, 0xba, 0x78, 0x83, 0x32, 0x66, 0xf7, 0xdf,
	0xc7, 0x29, 0xab, 0xa3, 0xbb, 0xf4, 0x15, 0x75, 0x9a, 0x0f, 0x50, 0x73, 0xce, 0xce, 0xac, 0xaa,
	0x20, 0x19, 0xd4, 0xcb, 0xf3, 0x46, 0xf3, 0x19, 0xbb, 0xd0, 0x10, 0x4a, 0x8f, 0x2e, 0x22, 0xd9,
	0x64, 0xd8, 0x44, 0x7f, 0x2d, 0x7e, 0xc5, 0x46, 0x51, 0x99, 0x4c, 0x87, 0xe4, 0x7c, 0x36, 0x9c,
	0x8f, 0xf3, 0xdf, 0xe9, 0xb6, 0x64, 0x93, 0xa7, 0xf6, 0xf1, 0x6b, 0x36, 0x7c, 0x80, 0xc8, 0x53,
	0xd1, 0x6d, 0xa6, 0x5d, 0xc9, 0x3f, 0x98, 0xb4, 0xb7, 0x7a, 0x7c, 0xc9, 0x0c, 0xc6, 0xcd, 0xae,
	0x10, 0x25, 0x55, 0xf2, 0x00, 0x9b, 0x9d, 0x56, 0x95, 0xda, 0x2a, 0x4f, 0x7b, 0xe9, 0xc0, 0x07,
	0xb2, 0xea, 0x7d, 0x11, 0x30, 0xc2, 0xe2, 0xd4, 0xae, 0x53, 0xe5, 0x56, 0x19, 0x08, 0xd2, 0x50,
	0xe7, 0x3b, 0xc5, 0xa8, 0x61, 0x96, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x08, 0x42, 0x7b, 0x1c,
	0xc9, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PinnedRepositoryClient is the client API for PinnedRepository service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PinnedRepositoryClient interface {
	Get(ctx context.Context, in *PinnedRepository, opts ...grpc.CallOption) (*PinnedRepository, error)
}

type pinnedRepositoryClient struct {
	cc *grpc.ClientConn
}

func NewPinnedRepositoryClient(cc *grpc.ClientConn) PinnedRepositoryClient {
	return &pinnedRepositoryClient{cc}
}

func (c *pinnedRepositoryClient) Get(ctx context.Context, in *PinnedRepository, opts ...grpc.CallOption) (*PinnedRepository, error) {
	out := new(PinnedRepository)
	err := c.cc.Invoke(ctx, "/pinnedRepository.PinnedRepository/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PinnedRepositoryServer is the server API for PinnedRepository service.
type PinnedRepositoryServer interface {
	Get(context.Context, *PinnedRepository) (*PinnedRepository, error)
}

// UnimplementedPinnedRepositoryServer can be embedded to have forward compatible implementations.
type UnimplementedPinnedRepositoryServer struct {
}

func (*UnimplementedPinnedRepositoryServer) Get(ctx context.Context, req *PinnedRepository) (*PinnedRepository, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterPinnedRepositoryServer(s *grpc.Server, srv PinnedRepositoryServer) {
	s.RegisterService(&_PinnedRepository_serviceDesc, srv)
}

func _PinnedRepository_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PinnedRepository)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PinnedRepositoryServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pinnedRepository.PinnedRepository/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PinnedRepositoryServer).Get(ctx, req.(*PinnedRepository))
	}
	return interceptor(ctx, in, info, handler)
}

var _PinnedRepository_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pinnedRepository.PinnedRepository",
	HandlerType: (*PinnedRepositoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _PinnedRepository_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pinnedRepository/pinnedRepository.proto",
}
